# xlim(0.7, 1) +
if (i == 1) {
plot <- plot + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
pdf(paste("../Figure/subchrom.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
} else {
plot <- plot + xlim(0, 0.3) + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60), limits = c(0,65))
pdf(paste("../Figure/subchrom_frag.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom_frag.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
}
}
for (i in 1:2) {
plot <- ggplot(dffinal2) +
geom_line( aes(x=density, y=UDG, color="1"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=UBG, color="2"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=QUDG, color="3"), linewidth = 0.8, linetype = 2) +
geom_line( aes(x=density, y=QUBG, color="4"), linewidth = 0.8, linetype = 2) +
geom_line( aes(x=density, y=ER, color="5"), linewidth = 0.8, linetype = 3) +
geom_line( aes(x=density, y=SBM, color="6"), linewidth = 0.8, linetype = 3) +
geom_segment(aes(x = 0, y = 23, xend = 1, yend = 23), linetype = 2, color="purple", size = 0.6) +
scale_color_manual(name="", values=c("orange", "green", "red", "forestgreen", "brown", "pink"), labels=c("Unit Disk Graphs", "Unit Balls Graphs", "Quasi-Unit Disk Graphs", "Quasi-Unit Balls Graphs", "Erdös-Rényi", "Stochastic Block Models")) +
# ggtitle("Subchromatic number based on density") +
ggtitle("") +
labs(x = "Density", y = "Subchromatic number", legends= "Types of graph generation:") +
guides(color=guide_legend(nrow=2)) +
theme(legend.position="top", legend.box="vertical", panel.background = element_rect(fill="white"), legend.key = element_rect(fill="white"), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=12), axis.text = element_text(size=7), panel.grid = element_blank(),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)
)
# geom_point(cex = 3) +
# geom_errorbar(aes(xmin=avggp-sdgp, xmax=avggp+sdgp), linewidth = 0.1, width=.1) +
# geom_errorbar(aes(ymin=avgyield-sdyield, ymax=avgyield+sdyield), linewidth = 0.1, width=.1) +
# theme(axis.text.x = element_text(size=7)) +
# theme(axis.text.y = element_text(size=7)) +
# theme(axis.title.x = element_text(size=10)) +
# theme(axis.title.y = element_text(size=10)) +
# guides(colour=guide_legend(nrow=2)) +
# theme(legend.title=element_blank()) +
# xlim(0.7, 1) +
if (i == 1) {
plot <- plot + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
pdf(paste("../Figure/subchromV2.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchromV2.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
} else {
plot <- plot + xlim(0, 0.3) + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60), limits = c(0,65))
pdf(paste("../Figure/subchrom_fragV2.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom_fragV2.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
}
}
for (i in 1:2) {
plot <- ggplot(dffinal2) +
geom_line( aes(x=density, y=UDG, color="1"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=UBG, color="2"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=ER, color="5"), linewidth = 0.8, linetype = 3) +
geom_line( aes(x=density, y=SBM, color="6"), linewidth = 0.8, linetype = 3) +
geom_segment(aes(x = 0, y = 23, xend = 1, yend = 23), linetype = 2, color="purple", size = 0.6) +
scale_color_manual(name="", values=c("orange", "green", "brown", "pink"), labels=c("Unit Disk Graphs", "Unit Balls Graphs", "Erdös-Rényi", "Stochastic Block Models")) +
# ggtitle("Subchromatic number based on density") +
ggtitle("") +
labs(x = "Density", y = "Subchromatic number", legends= "Types of graph generation:") +
guides(color=guide_legend(nrow=2)) +
theme(legend.position="top", legend.box="vertical", panel.background = element_rect(fill="white"), legend.key = element_rect(fill="white"), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=15), axis.text = element_text(size=10), panel.grid = element_blank(),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)
)
# geom_point(cex = 3) +
# geom_errorbar(aes(xmin=avggp-sdgp, xmax=avggp+sdgp), linewidth = 0.1, width=.1) +
# geom_errorbar(aes(ymin=avgyield-sdyield, ymax=avgyield+sdyield), linewidth = 0.1, width=.1) +
# theme(axis.text.x = element_text(size=7)) +
# theme(axis.text.y = element_text(size=7)) +
# theme(axis.title.x = element_text(size=10)) +
# theme(axis.title.y = element_text(size=10)) +
# guides(colour=guide_legend(nrow=2)) +
# theme(legend.title=element_blank()) +
# xlim(0.7, 1) +
if (i == 1) {
plot <- plot + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
pdf(paste("../Figure/subchromV3.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchromV3.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
} else {
plot <- plot + xlim(0, 0.3) + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60), limits = c(0,65))
pdf(paste("../Figure/subchrom_fragV3.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom_fragV3.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
}
}
library(tikzDevice)
library(ggplot2)
library(tidyverse)
library(dplyr)
require(data.table)
library(colorspace)
require(ggh4x)
# Setting the source file directory as the working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data = list.files(path = "../../Code/data",pattern="^score_(.*)_(.*)_(.*)_(.*).csv", full.names = TRUE)
# We import the data
df = do.call(rbind, lapply(data, fread))
df <- as.data.frame(unclass(df))
df$density <- as.double(as.integer(df$density*100+0.1))/100.
dfclean <- df %>% filter(mode == "SCA") %>% filter(type != "ST") %>% select(seed, type, density, subchromatique)
dffinal <- dfclean %>%
group_by(type, density) %>%
summarise(
mean=mean(subchromatique),
)
dfudg <- dffinal %>% filter(type == "UDG") %>% mutate(UDG = mean) %>% ungroup() %>% select(density, UDG)
dfubg <- dffinal %>% filter(type == "UBG") %>% mutate(UBG = mean) %>% ungroup() %>% select(density, UBG)
dfqudg <- dffinal %>% filter(type == "QUDG") %>% mutate(QUDG = mean) %>% ungroup() %>% select(density, QUDG)
dfqubg <- dffinal %>% filter(type == "QUBG") %>% mutate(QUBG = mean) %>% ungroup() %>% select(density, QUBG)
dfer <- dffinal %>% filter(type == "ER") %>% mutate(ER = mean) %>% ungroup() %>% select(density, ER)
dfsbm <- dffinal %>% filter(type == "SBM") %>% mutate(SBM = mean) %>% ungroup() %>% select(density, SBM)
dftemp1 <- merge(dfudg, dfubg, by=c("density"))
dftemp2 <- merge(dftemp1, dfqudg, by=c("density"))
dftemp3 <- merge(dftemp2, dfqubg, by=c("density"))
dftemp4 <- merge(dftemp3, dfer, by=c("density"))
dffinal2 <- merge(dftemp4, dfsbm, by=c("density"))
for (i in 1:2) {
plot <- ggplot(dffinal) +
geom_line( aes(x=density, y=mean, group=type, colour=type), linewidth = 0.8, linetype = 1) +
geom_segment(aes(x = 0, y = 23, xend = 1, yend = 23), linetype = 2, color="purple", size = 0.8) +
scale_color_discrete(name="", breaks=c("UDG", "UBG", "QUDG", "QUBG", "ER", "SBM"), labels=c("Unit Disk Graphs", "Unit Balls Graphs", "Quasi-Unit Disk Graphs", "Quasi-Unit Balls Graphs", "Erdös-Rényi", "Stochastic Block Models")) +
# ggtitle("Subchromatic number based on density") +
ggtitle("") +
labs(x = "Density", y = "Subchromatic number", legends= "Types of graph generation:") +
guides(color=guide_legend(nrow=2)) +
theme(legend.position="top", legend.box="vertical", panel.background = element_rect(fill="white"), legend.key = element_rect(fill="white"), legend.key.size = unit(0.3, 'cm'), panel.grid = element_blank(),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)
)
# geom_point(cex = 3) +
# geom_errorbar(aes(xmin=avggp-sdgp, xmax=avggp+sdgp), linewidth = 0.1, width=.1) +
# geom_errorbar(aes(ymin=avgyield-sdyield, ymax=avgyield+sdyield), linewidth = 0.1, width=.1) +
# theme(axis.text.x = element_text(size=7)) +
# theme(axis.text.y = element_text(size=7)) +
# theme(axis.title.x = element_text(size=10)) +
# theme(axis.title.y = element_text(size=10)) +
# guides(colour=guide_legend(nrow=2)) +
# theme(legend.title=element_blank()) +
# xlim(0.7, 1) +
if (i == 1) {
plot <- plot + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
pdf(paste("../Figure/subchrom.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
} else {
plot <- plot + xlim(0, 0.3) + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60), limits = c(0,65))
pdf(paste("../Figure/subchrom_frag.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom_frag.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
}
}
for (i in 1:2) {
plot <- ggplot(dffinal2) +
geom_line( aes(x=density, y=UDG, color="1"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=UBG, color="2"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=QUDG, color="3"), linewidth = 0.8, linetype = 2) +
geom_line( aes(x=density, y=QUBG, color="4"), linewidth = 0.8, linetype = 2) +
geom_line( aes(x=density, y=ER, color="5"), linewidth = 0.8, linetype = 3) +
geom_line( aes(x=density, y=SBM, color="6"), linewidth = 0.8, linetype = 3) +
geom_segment(aes(x = 0, y = 23, xend = 1, yend = 23), linetype = 2, color="purple", size = 0.6) +
scale_color_manual(name="", values=c("orange", "green", "red", "forestgreen", "brown", "cyan"), labels=c("Unit Disk Graphs", "Unit Balls Graphs", "Quasi-Unit Disk Graphs", "Quasi-Unit Balls Graphs", "Erdös-Rényi", "Stochastic Block Models")) +
# ggtitle("Subchromatic number based on density") +
ggtitle("") +
labs(x = "Density", y = "Subchromatic number", legends= "Types of graph generation:") +
guides(color=guide_legend(nrow=2)) +
theme(legend.position="top", legend.box="vertical", panel.background = element_rect(fill="white"), legend.key = element_rect(fill="white"), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=15), axis.text = element_text(size=10), panel.grid = element_blank(),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)
)
# geom_point(cex = 3) +
# geom_errorbar(aes(xmin=avggp-sdgp, xmax=avggp+sdgp), linewidth = 0.1, width=.1) +
# geom_errorbar(aes(ymin=avgyield-sdyield, ymax=avgyield+sdyield), linewidth = 0.1, width=.1) +
# theme(axis.text.x = element_text(size=7)) +
# theme(axis.text.y = element_text(size=7)) +
# theme(axis.title.x = element_text(size=10)) +
# theme(axis.title.y = element_text(size=10)) +
# guides(colour=guide_legend(nrow=2)) +
# theme(legend.title=element_blank()) +
# xlim(0.7, 1) +
if (i == 1) {
plot <- plot + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
pdf(paste("../Figure/subchromV2.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchromV2.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
} else {
plot <- plot + xlim(0, 0.3) + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60), limits = c(0,65))
pdf(paste("../Figure/subchrom_fragV2.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom_fragV2.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
}
}
for (i in 1:2) {
plot <- ggplot(dffinal2) +
geom_line( aes(x=density, y=UDG, color="1"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=UBG, color="2"), linewidth = 0.8, linetype = 1) +
geom_line( aes(x=density, y=ER, color="5"), linewidth = 0.8, linetype = 3) +
geom_line( aes(x=density, y=SBM, color="6"), linewidth = 0.8, linetype = 3) +
geom_segment(aes(x = 0, y = 23, xend = 1, yend = 23), linetype = 2, color="purple", size = 0.6) +
scale_color_manual(name="", values=c("orange", "green", "brown", "cyan"), labels=c("Unit Disk Graphs", "Unit Balls Graphs", "Erdös-Rényi", "Stochastic Block Models")) +
# ggtitle("Subchromatic number based on density") +
ggtitle("") +
labs(x = "Density", y = "Subchromatic number", legends= "Types of graph generation:") +
guides(color=guide_legend(nrow=2)) +
theme(legend.position="top", legend.box="vertical", panel.background = element_rect(fill="white"), legend.key = element_rect(fill="white"), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=15), axis.text = element_text(size=10), panel.grid = element_blank(),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)
)
# geom_point(cex = 3) +
# geom_errorbar(aes(xmin=avggp-sdgp, xmax=avggp+sdgp), linewidth = 0.1, width=.1) +
# geom_errorbar(aes(ymin=avgyield-sdyield, ymax=avgyield+sdyield), linewidth = 0.1, width=.1) +
# theme(axis.text.x = element_text(size=7)) +
# theme(axis.text.y = element_text(size=7)) +
# theme(axis.title.x = element_text(size=10)) +
# theme(axis.title.y = element_text(size=10)) +
# guides(colour=guide_legend(nrow=2)) +
# theme(legend.title=element_blank()) +
# xlim(0.7, 1) +
if (i == 1) {
plot <- plot + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
pdf(paste("../Figure/subchromV3.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchromV3.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
} else {
plot <- plot + xlim(0, 0.3) + scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60), limits = c(0,65))
pdf(paste("../Figure/subchrom_fragV3.pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/subchrom_fragV3.tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
}
}
library(tikzDevice)
library(ggplot2)
library(tidyverse)
library(dplyr)
require(data.table)
library(colorspace)
require(ggh4x)
# Setting the source file directory as the working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
namefilein = c("CompGFull.csv", "CompGPart.csv", "CompSFull.csv", "CompSPart.csv")
namefileout = c("GCA_Full", "GCA_Part", "SCA_Full", "SCA_Part")
for (i in 1:4) {
data = list.files(path = "../..",pattern=namefilein[i], full.names = TRUE)
# We import the data
df = do.call(rbind, lapply(data, fread))
df <- as.data.frame(unclass(df))
color1 <- "darkblue"
if (i <= 2) {
color2 <- "forestgreen"
} else {
color2 <- "red"
}
df$nb <- 0
df$nb <- which(df$nb==0)
df1 <- df %>% select(nb, ns3) %>% rename(score = ns3)
df1$type <- "ns3"
df2 <- df %>% select(nb, theo) %>% rename(score = theo)
if (i <= 2) {
df2$type <- "GCA"
} else {
df2$type <- "SCA"
}
dffinal <- merge(df1, df2, all=TRUE)
if (i <= 2) {
dffinal$type <- factor(dffinal$type, c("ns3", "GCA"))
} else {
dffinal$type <- factor(dffinal$type, c("ns3", "SCA"))
}
plot <- ggplot(dffinal) +
geom_bar( aes(x=nb, y=score, fill=type), stat="identity", position=position_dodge(width = 0.9), alpha=0.5) +
scale_fill_manual(name="", values=c(color1, color2), labels=c("ns-3", "Theoretical")) +
theme(legend.key = element_rect(fill="white"), legend.position="top", legend.box="vertical", legend.margin=margin(), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=15), axis.text = element_text(size=10), panel.background = element_rect(fill="white"), panel.grid = element_blank(),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)) +
scale_x_continuous(breaks = seq(1, c(168, 18, 168, 14)[i], by = c(3, 1, 3, 1)[i])) +
labs(x = "Nodes", y = "$p_v$", legends="")
pdf(paste("../Figure/", namefileout[i], "v2.pdf", sep=""), width = c(5, 5, 5, 5)[i], height = 3.5)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/", namefileout[i], "v2.tex", sep="")), width = c(5, 5, 5, 5)[i], height = 3.5)
print(plot)
dev.off()
}
library(tikzDevice)
library(ggplot2)
library(tidyverse)
library(dplyr)
require(data.table)
library(colorspace)
require(ggh4x)
# Setting the source file directory as the working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data = list.files(path = "../../Code/data",pattern="^score_(.*)_(.*)_(.*)_(.*).csv", full.names = TRUE)
# We import the data
df = do.call(rbind, lapply(data, fread))
df <- as.data.frame(unclass(df))
df$density <- as.double(as.integer(df$density*100+0.1))/100.
dfclean <- df %>% filter(type != "ST", subchromatique <= 23) %>% select(seed, type, mode, score, density)
# Calculates mean, sd, se and IC (Standard Deviation, Standard Error, Confidence Interval)
dffinal <- dfclean %>%
group_by(type, mode, density) %>%
summarise(
firstd = quantile(score, probs = 0.1),
lastd = quantile(score, probs = 0.9),
firstq = quantile(score, probs = 0.25),
lastq = quantile(score, probs = 0.75),
med = quantile(score, probs = 0.5),
n=n(),
mean=mean(score)
# sd=sd(score)
)
# %>%
# mutate(se=sd/sqrt(n))  %>%
# mutate(ic=se * qt((1-0.05)/2 + .5, n-1))
for (i in 1:6) {
dftemp1 <- dffinal %>% filter(type == c("UDG", "UBG", "QUDG", "QUBG", "ER", "SBM")[i])
# for (j in 1:2) {
#   dftemp2 <- dftemp1 %>% filter(mode == c("GCA", "SCA")[j])
name = c("Unit Disk Graphs", "Unit Balls Graphs", "Quasi-Unit Disk Graphs", "Quasi-Unit Balls Graphs", "Erdös-Rényi", "Stochastic Block Models")[i]
# type = c("GCA", "SCA")[j]
plot <- ggplot(dftemp1) +
geom_line(aes(x=density, y=med, group=mode, color=mode), linewidth = 0.8, linetype = 1) +
geom_line(aes(x=density, y=firstq, group=mode, color=mode), linewidth = 0.6, linetype = 2) +
geom_line(aes(x=density, y=lastq, group=mode, color=mode), linewidth = 0.6, linetype = 2)
# geom_line(aes(x=density, y=firstd, group=mode, color=mode), linewidth = 0.4, linetype = 3) +
# geom_line(aes(x=density, y=lastd, group=mode, color=mode), linewidth = 0.4, linetype = 3)
plot <- plot +
scale_color_manual(name="", values=c("forestgreen", "red"),labels=c("GCA","SCA")) +
# scale_shape_manual(name = "Lines", breaks = c("linetype", "linetype", "linetype"), values=c(1, 2, 3),labels=c("Mediane","Quartile", "Decile")) +
theme(legend.position="top", legend.box="vertical", panel.background = element_rect(fill="white"), legend.key = element_rect(fill="white"), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=15), axis.text = element_text(size=10), panel.grid = element_blank(),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)) +
labs(x = "Density", y = "$p_v$")
# plot <- plot + ggtitle(paste("Density", name, sep=" "))
plot <- plot + ggtitle("")
pdf(paste("../Figure/density_", name, ".pdf", sep=""), width = 5, height = 4)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/density_", name, ".tex", sep="")), width = 5, height = 4)
print(plot)
dev.off()
}
library(tikzDevice)
library(ggplot2)
library(tidyverse)
library(dplyr)
require(data.table)
library(colorspace)
require(ggh4x)
library(ggpubr) # For get_legend
# Setting the source file directory as the working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data = list.files(path = "../../Code/data",pattern="^score_(.*)_(.*)_(.*)_(.*).csv", full.names = TRUE)
# We import the data
df = do.call(rbind, lapply(data, fread))
df <- as.data.frame(unclass(df))
df$density <- as.double(as.integer(df$density*100+0.1))/100.
dfclean <- df %>% filter(type != "ST", density == 0.08, subchromatique <= 23) %>% select(seed, type, mode, score)
totnb = as.integer((dfclean %>% group_by(type, mode) %>% summarize(nbtot=n()) %>% select(type, nbtot))[1, 2])/as.integer((dfclean %>% group_by(seed, type, mode) %>% summarize(nbtot=n()) %>% select(seed, type, nbtot))[1, 3])
dfgroup <- dfclean %>% mutate(groupe=as.integer(as.integer(dfclean$score*100 + 9)/10)) %>%
group_by(seed, type, mode, groupe) %>%
summarise(nb=n())
# Calculates mean, sd, se and IC (Standard Deviation, Standard Error, Confidence Interval)
dffinal <- dfgroup %>%
group_by(type, mode, groupe) %>%
summarise(
sum=sum(nb),
wrongn=n(),
wrongmean=mean(nb),
wrongsd=sd(nb)
) %>%
mutate(mean=(sum/totnb)) %>%
mutate(sd=sqrt((wrongsd*wrongsd+wrongmean*wrongmean)*wrongn/totnb-mean*mean)) %>%
mutate(se=sd/sqrt(totnb))  %>%
mutate(ic=se * qt((1-0.05)/2 + .5, totnb-1)) %>%
mutate(groupe=groupe/10) %>% select(groupe, mean, sd, type, mode)
dfnormal <- dffinal %>% mutate(mean = mean/1000) %>% mutate(sd = sd/1000)
dfnormal$groupe[dfnormal$mode == "SCA"] <- dfnormal$groupe[dfnormal$mode == "SCA"]+0.04
dfnormal$groupe <- dfnormal$groupe - 0.02
# dfadd <- dffinal %>% filter(mode == "SCA")
# dfadd$groupe = 0.0
# dfadd$mean = 0.0
# dfadd$sd = 0.0
# dfadd <- distinct(dfadd)
#
# dffinal2 <- merge(dffinal, dfadd, all=TRUE)
color1 <- "forestgreen"
color2 <- "red"
for (i in 1:6) {
dftemp1 <- dfnormal %>% filter(type == c("UDG", "UBG", "QUDG", "QUBG", "ER", "SBM")[i])
colors <- c()
for (j in 0:10) {
if (Reduce("|", dftemp1$groupe==toString(-0.02+j*0.1))) {
colors <- c(colors, color1)
}
}
for (j in 0:10) {
if (Reduce("|", dftemp1$groupe==toString(0.02+j*0.1))) {
colors <- c(colors, color2)
}
}
# for (j in 1:2) {
# dftemp2 <- dftemp1 %>% filter(mode == c("GCA", "SCA")[j])
name = c("Unit Disk Graphs", "Unit Balls Graphs", "Quasi-Unit Disk Graphs", "Quasi-Unit Balls Graphs", "Erdös-Rényi", "Stochastic Block Models")[i]
# type = c("GCA", "SCA")[j]
plot <- ggplot(dftemp1) +
geom_bar( aes(x=groupe, y=mean), stat="identity", fill=colors, alpha=0.5) +
geom_errorbar( aes(x=groupe, ymin=mean-sd, ymax=mean+sd), width=0.04, colour="black", alpha=0.9, linewidth=0.6) +
# ggtitle(paste("Histogram", name, sep=" ")) +
ggtitle("") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1), limits = c(-0.075, 1.075)) +
theme(legend.position="top", legend.box="vertical", legend.margin=margin(), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=15), axis.text = element_text(size=10), panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color = "grey", size = 0.25, linetype = 1),
axis.line = element_line(arrow = arrow(angle = 30,
length = unit(0.2, "cm"),
ends = "last",
type = "closed"), color = "black", size = 0.5, linetype = 1)) +
labs(x = "$p_v$", y = "Proportion", legends="")
# geom_point(cex = 3) +
# geom_errorbar(aes(xmin=avggp-sdgp, xmax=avggp+sdgp), linewidth = 0.1, width=.1) +
# geom_errorbar(aes(ymin=avgyield-sdyield, ymax=avgyield+sdyield), linewidth = 0.1, width=.1) +
# theme(axis.text.x = element_text(size=7)) +
# theme(axis.text.y = element_text(size=7)) +
# theme(axis.title.x = element_text(size=10)) +
# theme(axis.title.y = element_text(size=10)) +
# guides(colour=guide_legend(nrow=2)) +
# theme(legend.title=element_blank()) +
# xlim(0.7, 1) +
pdf(paste("../Figure/histo_", name, ".pdf", sep=""), width = 5, height = 3.5)
print(plot)
dev.off()
tikz(file = sprintf(paste("../Figure/histo_", name, ".tex", sep="")), width = 5, height = 3.5)
print(plot)
dev.off()
}
# }
dflegend <- dfnormal %>% group_by(mode) %>% summarise(mean=mean(mean), groupe=mean(groupe))
thelegendasaggplot <- ggplot(dflegend, aes(x=groupe, fill = mode)) +
geom_histogram(alpha = 0.5) +
theme(legend.key = element_rect(fill = "white"), legend.position="top", legend.box="vertical", legend.margin=margin(), legend.key.size = unit(0.8, 'cm'), legend.text = element_text(size=7), axis.title = element_text(size=15), axis.text = element_text(size=10)) +
scale_fill_manual(name="", values=c("forestgreen","red"),labels=c("GCA","SCA"))
thelegendasagtable <- get_legend(thelegendasaggplot)
#Convert to a ggplot and print
thelegendasaggplot <- as_ggplot(thelegendasagtable)
pdf(paste("../Figure/histo_legend.pdf", sep=""), width = 8, height = 0.5)
print(thelegendasaggplot)
dev.off()
tikz(file = sprintf(paste("../Figure/histo_legend.tex", sep="")), width = 5, height = 0.5)
print(thelegendasaggplot)
dev.off()
